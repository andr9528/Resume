<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Link_Fashion_Hero_GitHub_Project" type="System.Resources.ResXNullRef, System.Windows.Forms">
    <value />
  </data>
  <data name="Link_Tv2_Cliptool_GitHub_Project" type="System.Resources.ResXNullRef, System.Windows.Forms">
    <value />
  </data>
  <data name="Profile_Name" xml:space="preserve">
    <value>Andr√© Steenhoff Madsen</value>
  </data>
  <data name="User_Interface_Title" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="Profile_Description" xml:space="preserve">
    <value>I am an easy-to-learn, logically thinking developer with experience in C# / .Net. During my most recent position at Tv2 Danmark, I also gained experience with TypeScript / React.

As a background, I have a Computer Science degree and on top of that a Bachelor in Software Development. This education, along with my sense of logic, allows me to understand other coding languages to some degree, even if I have no previous experience with them.

When I develop I strive to adhere to the DRY and SOLID principles as much as possible. With these principles in focus, I fell that code gets a good quality.</value>
  </data>
  <data name="Project_Tracker_Title" xml:space="preserve">
    <value>Tracker Application</value>
  </data>
  <data name="Project_Tracker_Description" xml:space="preserve">
    <value>A highly modular program usable to track a number of things, depending on the modules included. 
  Will be developed using C#, Entity Framework Core and Uno Platform as frontend.
  Planned modules include: Dining, Budget and Time.</value>
  </data>
  <data name="Project_Tower_Defence_Dev_Title" xml:space="preserve">
    <value>Roguelike Tower Defence Game</value>
  </data>
  <data name="Project_Tower_Defence_Dev_Description" xml:space="preserve">
    <value>I have a game in mind that I would like to slowly get started on.
  Currently I have noted down many details of the planned game, but have not started on any code for it yet.
  I am heavily leaning toward using Godot as the game engine of choice, mainly for the C# language, but also due to the controversy about Unity during 2023.
  The game genre will be Tower Defence / Rougelike, with inspiration from a number of Mythologies, as a nod to my liking of 'Age of Mythology'.</value>
  </data>
  <data name="Project_Oni_Modding_Title" xml:space="preserve">
    <value>Oxygen Not Included Modding</value>
  </data>
  <data name="Project_Oni_Modding_Description" xml:space="preserve">
    <value>I have some ideas for mods for one of my favorite games as of late, Oxygen Not Included, which I might spend some time on bringing to life.
  Some of the ideas I have shared with other modders for the game, and I will thus likely spar with them if needed.
  The game is developed using Unity, therefore C# is the language to be used, which is an advantage for me.
  It uses 'Harmony' as the access point for modders, which might help me learn it for use in my own game, if Godot allows it.</value>
  </data>
  <data name="Education_Grade_Bachelor" xml:space="preserve">
    <value>Bachelor in Software Development</value>
  </data>
  <data name="Education_Grade_Software" xml:space="preserve">
    <value>Computer Science</value>
  </data>
  <data name="Education_Grade_Htx" xml:space="preserve">
    <value>Higher Technical Exam</value>
  </data>
  <data name="Education_Description_Bachelor" xml:space="preserve">
    <value>Subjects I performed well in includes .Net Core, Database and Test.</value>
  </data>
  <data name="Education_Description_Software" xml:space="preserve">
    <value>Learned about reading and creating a number of UML diagrams, in connection with learning to develop using SCRUM.</value>
  </data>
  <data name="Education_Description_Htx" xml:space="preserve">
    <value>Was part of a small class on the Technology and Design line.</value>
  </data>
  <data name="Employment_Employer_Apps4All" xml:space="preserve">
    <value>Apps4All</value>
  </data>
  <data name="Employment_Employer_Tv2" xml:space="preserve">
    <value>Tv2 Danmark</value>
  </data>
  <data name="Employment_Job_Title_Apps4All" xml:space="preserve">
    <value>Mobile Developer</value>
  </data>
  <data name="Employment_Job_Title_Tv2" xml:space="preserve">
    <value>Software Developer</value>
  </data>
  <data name="Employment_Work_Description_Apps4All" xml:space="preserve">
    <value>My primary task was to develop new mobile applications suitable to Android, for using in Point-of-Sale units. 
  Development of the mobile applications I did through the use of Xamarin Forms.
  In addition to this, I also developed some Microservices to support the mobile applications.
  The microservices were deployed to Google Cloud.</value>
  </data>
  <data name="Employment_Work_Description_Tv2" xml:space="preserve">
    <value>This position ended due to a contract running out, and it not being able to be renewed, not because I was fired.
  I was part of a team of developers who by use of SCRUM, developed on a number of internal tools, some of which are Open Source projects. 
  Some of the projects I have contributed to have since my contract ran out been changed to be Closed Source. I do know that this change is only temporary.
  On the Cliptool project, I rewrote the frontend side of the application, mainly to limit the amount of components per file to one.
  The rewrite was also done to apply a better file structure to the project, as it was difficult to know where different components were located beforehand.
  I also rewrote parts of the backend of Cliptool in the process, mainly to save changes to settings for between sessions better than before.
  During this rewrite, I managed to fix a number of smaller bugs, and introduce the ability to hide selected files from the GUI.
  On the Sofie project, I helped with creating parts of the backend, related to interacting with the underlying Mongo database and the frontend-facing presentation layer.
  I also helped with moving over parts of the company-specific code from the old repository, to the new structure.
  All in all, I went from never having touched or used TypeScript, to now feeling just as comfortable in that as I am in C#.</value>
  </data>
  <data name="General_Information_Country" xml:space="preserve">
    <value>Denmark</value>
  </data>
  <data name="Language_Danish_Language" xml:space="preserve">
    <value>Danish</value>
  </data>
  <data name="Language_English_Language" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Language_German_Language" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="Link_Remark_GitHub" xml:space="preserve">
    <value>Take a peek at my previous code.</value>
  </data>
  <data name="Link_Remark_LinkedIn" xml:space="preserve">
    <value>Don't mind the weird looking link, LinkedIn doesn't like my apostrophe.</value>
  </data>
  <data name="Link_Remark_Personal_Page" xml:space="preserve">
    <value>To view this CV online.</value>
  </data>
  <data name="References_Company_Name_Tv2" xml:space="preserve">
    <value>Tv2 Denmark</value>
  </data>
  <data name="User_Interface_Skills_Header" xml:space="preserve">
    <value>Skills</value>
  </data>
  <data name="Link_Title_Personal_Page" xml:space="preserve">
    <value>Personal Webpage</value>
  </data>
  <data name="Link_Title_LinkedIn" xml:space="preserve">
    <value>LinkedIn</value>
  </data>
  <data name="Link_Title_GitHub" xml:space="preserve">
    <value>GitHub</value>
  </data>
  <data name="Link_Personal_Github" xml:space="preserve">
    <value />
  </data>
  <data name="Link_Noergaard_Mikkelsen_GitHub_Project" xml:space="preserve">
    <value />
  </data>
  <data name="Link_Personal_LinkedIn" xml:space="preserve">
    <value />
  </data>
  <data name="Link_Personal_Page" xml:space="preserve">
    <value />
  </data>
</root>